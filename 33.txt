This error is due to the fact that the translate method of the googletrans library is asynchronous (returning a coroutine object), but it is not used in the code
await to wait for it to complete, resulting in the error 'coroutine' object has no attribute 'text' when attempting to access the.text attribute.
Repair instructions
I added import asyncio and split the translation function into the asynchronous version (translate_text_async) and the synchronous wrapper version
(translate_text), use asyncio.run() to run the asynchronous call. This is feasible in the synchronization script.
If you are running in PyCharm, make sure that the Python version supports asyncio (3.7+ is fine, your 3.13 is fine).
For Mac (from the path, it is /Users/...) If there is a problem with the Tesseract path, you can specify it in the code:
Pytesseract. Pytesseract. Tesseract_cmd = '/ usr/local/bin/tesseract' (or your actual path, use
which tesseract command checks.
When re-running the command, it should be able to translate normally. For example, if the extracted text is "Key stakeholders include:" (English), select -
-action en_to_zh should output Chinese translations such as "Key stakeholders include:"
If there are any other errors (such as network issues or Tesseract configuration), please let me know the details and I will continue to optimize. Do you need to test specific images?